{"dependencies":[{"name":"apollo-link","loc":{"line":28,"column":39}},{"name":"graphql/language/printer","loc":{"line":29,"column":22}}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.HttpLink=exports.createHttpLink=void 0;var e=require(\"apollo-link\"),t=require(\"graphql/language/printer\"),n=function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},o=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&(n[r[o]]=e[r[o]])}return n},i=function(e,t,n){var r=new Error(n);throw r.response=e,r.statusCode=e.status,r.result=t,r},s=function(e){return function(t){return t.text().then(function(e){try{return JSON.parse(e)}catch(r){var n=r;return n.response=t,n.statusCode=t.status,n.bodyText=e,Promise.reject(n)}}).then(function(n){return t.status>=300&&i(t,n,\"Response not successful: Received status code \"+t.status),n.hasOwnProperty(\"data\")||n.hasOwnProperty(\"errors\")||i(t,n,\"Server response was missing for query '\"+e.operationName+\"'.\"),n})}},a=function(e){if(e.use)throw new Error(\"\\n      It looks like you're using apollo-fetch! Apollo Link now uses native fetch\\n      implementation, so apollo-fetch is not needed. If you want to use your existing\\n      apollo-fetch middleware, please check this guide to upgrade:\\n        https://github.com/apollographql/apollo-link/blob/master/docs/implementation.md\\n    \")},c=function(e){if(!e&&\"undefined\"==typeof fetch){var t=\"unfetch\";throw\"undefined\"==typeof window&&(t=\"node-fetch\"),new Error(\"fetch is not found globally and no fetcher passed, to fix pass a fetch for\\n      your environment like https://www.npmjs.com/package/\"+t+\".\\n\\n      For example:\\n        import fetch from '\"+t+\"';\\n        import { createHttpLink } from 'apollo-link-http';\\n\\n        const link = createHttpLink({ uri: '/graphql', fetch: fetch });\\n      \")}},l=function(){if(\"undefined\"==typeof AbortController)return{controller:!1,signal:!1};var e=new AbortController;return{controller:e,signal:e.signal}},u={includeQuery:!0,includeExtensions:!1},p=exports.createHttpLink=function(n){void 0===n&&(n={});var i=n.uri,p=n.fetch,f=n.includeExtensions,h=o(n,[\"uri\",\"fetch\",\"includeExtensions\"]);return c(p),p&&a(p),p||(p=fetch),i||(i=\"/graphql\"),new e.ApolloLink(function(n){return new e.Observable(function(e){var o,a=n.getContext(),c=a.headers,d=a.credentials,y=a.fetchOptions,v=void 0===y?{}:y,w=a.uri,g=a.http,m=void 0===g?{}:g,b=n.operationName,O=n.extensions,x=n.variables,k=n.query,P=r({},u,m),j={operationName:b,variables:x};(f||P.includeExtensions)&&(j.extensions=O),P.includeQuery&&(j.query=(0,t.print)(k));try{o=JSON.stringify(j)}catch(e){var q=new Error(\"Network request failed. Payload is not serializable: \"+e.message);throw q.parseError=e,q}var E=v;h.fetchOptions&&(E=r({},h.fetchOptions,E));var _=r({method:\"POST\"},E,{headers:{accept:\"*/*\",\"content-type\":\"application/json\"},body:o});h.credentials&&(_.credentials=h.credentials),d&&(_.credentials=d),h.headers&&(_.headers=r({},_.headers,h.headers)),c&&(_.headers=r({},_.headers,c));var L=l(),A=L.controller,C=L.signal;return A&&(_.signal=C),p(w||i,_).then(function(e){return n.setContext({response:e}),e}).then(s(n)).then(function(t){return e.next(t),e.complete(),t}).catch(function(t){\"AbortError\"!==t.name&&e.error(t)}),function(){A&&A.abort()}})})},f=function(e){function t(t){return e.call(this,p(t).request)||this}return n(t,e),t}(e.ApolloLink);exports.HttpLink=f;"},"hash":"e87f4bb311230ebfd217eec2de10c817","cacheData":{"env":{}}}