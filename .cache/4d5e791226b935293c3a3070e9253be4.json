{"dependencies":[{"name":"./caml_builtin_exceptions.js","loc":{"line":3,"column":38}}],"generated":{"js":"'use strict';\n\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction div(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  } else {\n    return x / y | 0;\n  }\n}\n\nfunction mod_(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  } else {\n    return x % y;\n  }\n}\n\nfunction caml_bswap16(x) {\n  return ((x & 255) << 8) | ((x & 65280) >>> 8);\n}\n\nfunction caml_int32_bswap(x) {\n  return ((x & 255) << 24) | ((x & 65280) << 8) | ((x & 16711680) >>> 8) | ((x & 4278190080) >>> 24);\n}\n\nvar imul = ( Math.imul || function (x,y) {\n  y |= 0; return ((((x >> 16) * y) << 16) + (x & 0xffff) * y)|0; \n}\n);\n\nvar caml_nativeint_bswap = caml_int32_bswap;\n\nexports.div                  = div;\nexports.mod_                 = mod_;\nexports.caml_bswap16         = caml_bswap16;\nexports.caml_int32_bswap     = caml_int32_bswap;\nexports.caml_nativeint_bswap = caml_nativeint_bswap;\nexports.imul                 = imul;\n/* imul Not a pure module */\n","map":{"mappings":[{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_int32.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}}],"sources":{"../../../../node_modules/bs-platform/lib/js/caml_int32.js":"'use strict';\n\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction div(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  } else {\n    return x / y | 0;\n  }\n}\n\nfunction mod_(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  } else {\n    return x % y;\n  }\n}\n\nfunction caml_bswap16(x) {\n  return ((x & 255) << 8) | ((x & 65280) >>> 8);\n}\n\nfunction caml_int32_bswap(x) {\n  return ((x & 255) << 24) | ((x & 65280) << 8) | ((x & 16711680) >>> 8) | ((x & 4278190080) >>> 24);\n}\n\nvar imul = ( Math.imul || function (x,y) {\n  y |= 0; return ((((x >> 16) * y) << 16) + (x & 0xffff) * y)|0; \n}\n);\n\nvar caml_nativeint_bswap = caml_int32_bswap;\n\nexports.div                  = div;\nexports.mod_                 = mod_;\nexports.caml_bswap16         = caml_bswap16;\nexports.caml_int32_bswap     = caml_int32_bswap;\nexports.caml_nativeint_bswap = caml_nativeint_bswap;\nexports.imul                 = imul;\n/* imul Not a pure module */\n"},"lineCount":43}},"hash":"8b99e94a68ea02f3c862fcadf1174bb6","cacheData":{"env":{}}}