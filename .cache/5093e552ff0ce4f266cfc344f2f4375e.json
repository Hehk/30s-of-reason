{"dependencies":[{"name":"./block.js","loc":{"line":3,"column":20}}],"generated":{"js":"'use strict';\n\nvar Block = require(\"./block.js\");\n\nfunction erase_rel(param) {\n  if (typeof param === \"number\") {\n    return /* End_of_fmtty */0;\n  } else {\n    switch (param.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [erase_rel(param[0])]);\n      case 1 : \n          return /* String_ty */Block.__(1, [erase_rel(param[0])]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [erase_rel(param[0])]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [erase_rel(param[0])]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [erase_rel(param[0])]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [erase_rel(param[0])]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [erase_rel(param[0])]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [erase_rel(param[0])]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    param[0],\n                    erase_rel(param[1])\n                  ]);\n      case 9 : \n          var ty1 = param[0];\n          return /* Format_subst_ty */Block.__(9, [\n                    ty1,\n                    ty1,\n                    erase_rel(param[2])\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [erase_rel(param[0])]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [erase_rel(param[0])]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [erase_rel(param[0])]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [erase_rel(param[0])]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [erase_rel(param[0])]);\n      \n    }\n  }\n}\n\nfunction concat_fmtty(fmtty1, fmtty2) {\n  if (typeof fmtty1 === \"number\") {\n    return fmtty2;\n  } else {\n    switch (fmtty1.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 1 : \n          return /* String_ty */Block.__(1, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    fmtty1[0],\n                    concat_fmtty(fmtty1[1], fmtty2)\n                  ]);\n      case 9 : \n          return /* Format_subst_ty */Block.__(9, [\n                    fmtty1[0],\n                    fmtty1[1],\n                    concat_fmtty(fmtty1[2], fmtty2)\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [concat_fmtty(fmtty1[0], fmtty2)]);\n      \n    }\n  }\n}\n\nfunction concat_fmt(fmt1, fmt2) {\n  if (typeof fmt1 === \"number\") {\n    return fmt2;\n  } else {\n    switch (fmt1.tag | 0) {\n      case 0 : \n          return /* Char */Block.__(0, [concat_fmt(fmt1[0], fmt2)]);\n      case 1 : \n          return /* Caml_char */Block.__(1, [concat_fmt(fmt1[0], fmt2)]);\n      case 2 : \n          return /* String */Block.__(2, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 3 : \n          return /* Caml_string */Block.__(3, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 4 : \n          return /* Int */Block.__(4, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 5 : \n          return /* Int32 */Block.__(5, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 6 : \n          return /* Nativeint */Block.__(6, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 7 : \n          return /* Int64 */Block.__(7, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 8 : \n          return /* Float */Block.__(8, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 9 : \n          return /* Bool */Block.__(9, [concat_fmt(fmt1[0], fmt2)]);\n      case 10 : \n          return /* Flush */Block.__(10, [concat_fmt(fmt1[0], fmt2)]);\n      case 11 : \n          return /* String_literal */Block.__(11, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 12 : \n          return /* Char_literal */Block.__(12, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 13 : \n          return /* Format_arg */Block.__(13, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 14 : \n          return /* Format_subst */Block.__(14, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 15 : \n          return /* Alpha */Block.__(15, [concat_fmt(fmt1[0], fmt2)]);\n      case 16 : \n          return /* Theta */Block.__(16, [concat_fmt(fmt1[0], fmt2)]);\n      case 17 : \n          return /* Formatting_lit */Block.__(17, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 18 : \n          return /* Formatting_gen */Block.__(18, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 19 : \n          return /* Reader */Block.__(19, [concat_fmt(fmt1[0], fmt2)]);\n      case 20 : \n          return /* Scan_char_set */Block.__(20, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 21 : \n          return /* Scan_get_counter */Block.__(21, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 22 : \n          return /* Scan_next_char */Block.__(22, [concat_fmt(fmt1[0], fmt2)]);\n      case 23 : \n          return /* Ignored_param */Block.__(23, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 24 : \n          return /* Custom */Block.__(24, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      \n    }\n  }\n}\n\nexports.concat_fmtty = concat_fmtty;\nexports.erase_rel    = erase_rel;\nexports.concat_fmt   = concat_fmt;\n/* No side effect */\n","map":{"mappings":[{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}}],"sources":{"../../../../node_modules/bs-platform/lib/js/camlinternalFormatBasics.js":"'use strict';\n\nvar Block = require(\"./block.js\");\n\nfunction erase_rel(param) {\n  if (typeof param === \"number\") {\n    return /* End_of_fmtty */0;\n  } else {\n    switch (param.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [erase_rel(param[0])]);\n      case 1 : \n          return /* String_ty */Block.__(1, [erase_rel(param[0])]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [erase_rel(param[0])]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [erase_rel(param[0])]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [erase_rel(param[0])]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [erase_rel(param[0])]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [erase_rel(param[0])]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [erase_rel(param[0])]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    param[0],\n                    erase_rel(param[1])\n                  ]);\n      case 9 : \n          var ty1 = param[0];\n          return /* Format_subst_ty */Block.__(9, [\n                    ty1,\n                    ty1,\n                    erase_rel(param[2])\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [erase_rel(param[0])]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [erase_rel(param[0])]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [erase_rel(param[0])]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [erase_rel(param[0])]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [erase_rel(param[0])]);\n      \n    }\n  }\n}\n\nfunction concat_fmtty(fmtty1, fmtty2) {\n  if (typeof fmtty1 === \"number\") {\n    return fmtty2;\n  } else {\n    switch (fmtty1.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 1 : \n          return /* String_ty */Block.__(1, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    fmtty1[0],\n                    concat_fmtty(fmtty1[1], fmtty2)\n                  ]);\n      case 9 : \n          return /* Format_subst_ty */Block.__(9, [\n                    fmtty1[0],\n                    fmtty1[1],\n                    concat_fmtty(fmtty1[2], fmtty2)\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [concat_fmtty(fmtty1[0], fmtty2)]);\n      \n    }\n  }\n}\n\nfunction concat_fmt(fmt1, fmt2) {\n  if (typeof fmt1 === \"number\") {\n    return fmt2;\n  } else {\n    switch (fmt1.tag | 0) {\n      case 0 : \n          return /* Char */Block.__(0, [concat_fmt(fmt1[0], fmt2)]);\n      case 1 : \n          return /* Caml_char */Block.__(1, [concat_fmt(fmt1[0], fmt2)]);\n      case 2 : \n          return /* String */Block.__(2, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 3 : \n          return /* Caml_string */Block.__(3, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 4 : \n          return /* Int */Block.__(4, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 5 : \n          return /* Int32 */Block.__(5, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 6 : \n          return /* Nativeint */Block.__(6, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 7 : \n          return /* Int64 */Block.__(7, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 8 : \n          return /* Float */Block.__(8, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 9 : \n          return /* Bool */Block.__(9, [concat_fmt(fmt1[0], fmt2)]);\n      case 10 : \n          return /* Flush */Block.__(10, [concat_fmt(fmt1[0], fmt2)]);\n      case 11 : \n          return /* String_literal */Block.__(11, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 12 : \n          return /* Char_literal */Block.__(12, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 13 : \n          return /* Format_arg */Block.__(13, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 14 : \n          return /* Format_subst */Block.__(14, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 15 : \n          return /* Alpha */Block.__(15, [concat_fmt(fmt1[0], fmt2)]);\n      case 16 : \n          return /* Theta */Block.__(16, [concat_fmt(fmt1[0], fmt2)]);\n      case 17 : \n          return /* Formatting_lit */Block.__(17, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 18 : \n          return /* Formatting_gen */Block.__(18, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 19 : \n          return /* Reader */Block.__(19, [concat_fmt(fmt1[0], fmt2)]);\n      case 20 : \n          return /* Scan_char_set */Block.__(20, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 21 : \n          return /* Scan_get_counter */Block.__(21, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 22 : \n          return /* Scan_next_char */Block.__(22, [concat_fmt(fmt1[0], fmt2)]);\n      case 23 : \n          return /* Ignored_param */Block.__(23, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 24 : \n          return /* Custom */Block.__(24, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      \n    }\n  }\n}\n\nexports.concat_fmtty = concat_fmtty;\nexports.erase_rel    = erase_rel;\nexports.concat_fmt   = concat_fmt;\n/* No side effect */\n"},"lineCount":229}},"hash":"9039697b91b0be605c548078d9601f5c","cacheData":{"env":{}}}