{"dependencies":[{"name":"./caml_int32.js","loc":{"line":3,"column":38}},{"name":"./caml_queue.js","loc":{"line":4,"column":38}},{"name":"./caml_builtin_exceptions.js","loc":{"line":5,"column":38}}],"generated":{"js":"'use strict';\n\nvar Caml_int32              = require(\"./caml_int32.js\");\nvar Caml_queue              = require(\"./caml_queue.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction rotl32(x, n) {\n  return (x << n) | (x >>> (32 - n | 0));\n}\n\nfunction mix(h, d) {\n  var d$1 = d;\n  d$1 = Caml_int32.imul(d$1, 3432918353);\n  d$1 = rotl32(d$1, 15);\n  d$1 = Caml_int32.imul(d$1, 461845907);\n  var h$1 = h ^ d$1;\n  h$1 = rotl32(h$1, 13);\n  return (h$1 + (h$1 << 2) | 0) + 3864292196 | 0;\n}\n\nfunction final_mix(h) {\n  var h$1 = h ^ (h >>> 16);\n  h$1 = Caml_int32.imul(h$1, 2246822507);\n  h$1 = h$1 ^ (h$1 >>> 13);\n  h$1 = Caml_int32.imul(h$1, 3266489909);\n  return h$1 ^ (h$1 >>> 16);\n}\n\nfunction caml_hash_mix_string(h, s) {\n  var len = s.length;\n  var block = (len / 4 | 0) - 1 | 0;\n  var hash = h;\n  for(var i = 0; i <= block; ++i){\n    var j = (i << 2);\n    var w = s.charCodeAt(j) | (s.charCodeAt(j + 1 | 0) << 8) | (s.charCodeAt(j + 2 | 0) << 16) | (s.charCodeAt(j + 3 | 0) << 24);\n    hash = mix(hash, w);\n  }\n  var modulo = len & 3;\n  if (modulo !== 0) {\n    var w$1 = modulo === 3 ? (s.charCodeAt(len - 1 | 0) << 16) | (s.charCodeAt(len - 2 | 0) << 8) | s.charCodeAt(len - 3 | 0) : (\n        modulo === 2 ? (s.charCodeAt(len - 1 | 0) << 8) | s.charCodeAt(len - 2 | 0) : s.charCodeAt(len - 1 | 0)\n      );\n    hash = mix(hash, w$1);\n  }\n  hash = hash ^ len;\n  return hash;\n}\n\nfunction caml_hash(count, _, seed, obj) {\n  var hash = seed;\n  if (typeof obj === \"number\") {\n    var u = obj | 0;\n    hash = mix(hash, (u + u | 0) + 1 | 0);\n    return final_mix(hash);\n  } else if (typeof obj === \"string\") {\n    hash = caml_hash_mix_string(hash, obj);\n    return final_mix(hash);\n  } else {\n    var queue = /* record */[\n      /* length */0,\n      /* tail : None */0\n    ];\n    var num = count;\n    Caml_queue.push(obj, queue);\n    num = num - 1 | 0;\n    while(queue[/* length */0] !== 0 && num > 0) {\n      var obj$1 = Caml_queue.unsafe_pop(queue);\n      if (typeof obj$1 === \"number\") {\n        var u$1 = obj$1 | 0;\n        hash = mix(hash, (u$1 + u$1 | 0) + 1 | 0);\n        num = num - 1 | 0;\n      } else if (typeof obj$1 === \"string\") {\n        hash = caml_hash_mix_string(hash, obj$1);\n        num = num - 1 | 0;\n      } else if (typeof obj$1 !== \"boolean\") {\n        if (typeof obj$1 !== \"undefined\") {\n          if (typeof obj$1 === \"symbol\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"caml_hash.ml\",\n                    135,\n                    8\n                  ]\n                ];\n          } else if (typeof obj$1 !== \"function\") {\n            var size = obj$1.length;\n            if (size !== undefined) {\n              var obj_tag = obj$1.tag | 0;\n              var tag = (size << 10) | obj_tag;\n              if (tag === 248) {\n                hash = mix(hash, obj$1[1]);\n              } else {\n                hash = mix(hash, tag);\n                var v = size - 1 | 0;\n                var block = v < num ? v : num;\n                for(var i = 0; i <= block; ++i){\n                  Caml_queue.push(obj$1[i], queue);\n                }\n              }\n            }\n            \n          }\n          \n        }\n        \n      }\n      \n    };\n    return final_mix(hash);\n  }\n}\n\nexports.caml_hash = caml_hash;\n/* No side effect */\n","map":{"mappings":[{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../../node_modules/bs-platform/lib/js/caml_hash.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}}],"sources":{"../../../../node_modules/bs-platform/lib/js/caml_hash.js":"'use strict';\n\nvar Caml_int32              = require(\"./caml_int32.js\");\nvar Caml_queue              = require(\"./caml_queue.js\");\nvar Caml_builtin_exceptions = require(\"./caml_builtin_exceptions.js\");\n\nfunction rotl32(x, n) {\n  return (x << n) | (x >>> (32 - n | 0));\n}\n\nfunction mix(h, d) {\n  var d$1 = d;\n  d$1 = Caml_int32.imul(d$1, 3432918353);\n  d$1 = rotl32(d$1, 15);\n  d$1 = Caml_int32.imul(d$1, 461845907);\n  var h$1 = h ^ d$1;\n  h$1 = rotl32(h$1, 13);\n  return (h$1 + (h$1 << 2) | 0) + 3864292196 | 0;\n}\n\nfunction final_mix(h) {\n  var h$1 = h ^ (h >>> 16);\n  h$1 = Caml_int32.imul(h$1, 2246822507);\n  h$1 = h$1 ^ (h$1 >>> 13);\n  h$1 = Caml_int32.imul(h$1, 3266489909);\n  return h$1 ^ (h$1 >>> 16);\n}\n\nfunction caml_hash_mix_string(h, s) {\n  var len = s.length;\n  var block = (len / 4 | 0) - 1 | 0;\n  var hash = h;\n  for(var i = 0; i <= block; ++i){\n    var j = (i << 2);\n    var w = s.charCodeAt(j) | (s.charCodeAt(j + 1 | 0) << 8) | (s.charCodeAt(j + 2 | 0) << 16) | (s.charCodeAt(j + 3 | 0) << 24);\n    hash = mix(hash, w);\n  }\n  var modulo = len & 3;\n  if (modulo !== 0) {\n    var w$1 = modulo === 3 ? (s.charCodeAt(len - 1 | 0) << 16) | (s.charCodeAt(len - 2 | 0) << 8) | s.charCodeAt(len - 3 | 0) : (\n        modulo === 2 ? (s.charCodeAt(len - 1 | 0) << 8) | s.charCodeAt(len - 2 | 0) : s.charCodeAt(len - 1 | 0)\n      );\n    hash = mix(hash, w$1);\n  }\n  hash = hash ^ len;\n  return hash;\n}\n\nfunction caml_hash(count, _, seed, obj) {\n  var hash = seed;\n  if (typeof obj === \"number\") {\n    var u = obj | 0;\n    hash = mix(hash, (u + u | 0) + 1 | 0);\n    return final_mix(hash);\n  } else if (typeof obj === \"string\") {\n    hash = caml_hash_mix_string(hash, obj);\n    return final_mix(hash);\n  } else {\n    var queue = /* record */[\n      /* length */0,\n      /* tail : None */0\n    ];\n    var num = count;\n    Caml_queue.push(obj, queue);\n    num = num - 1 | 0;\n    while(queue[/* length */0] !== 0 && num > 0) {\n      var obj$1 = Caml_queue.unsafe_pop(queue);\n      if (typeof obj$1 === \"number\") {\n        var u$1 = obj$1 | 0;\n        hash = mix(hash, (u$1 + u$1 | 0) + 1 | 0);\n        num = num - 1 | 0;\n      } else if (typeof obj$1 === \"string\") {\n        hash = caml_hash_mix_string(hash, obj$1);\n        num = num - 1 | 0;\n      } else if (typeof obj$1 !== \"boolean\") {\n        if (typeof obj$1 !== \"undefined\") {\n          if (typeof obj$1 === \"symbol\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"caml_hash.ml\",\n                    135,\n                    8\n                  ]\n                ];\n          } else if (typeof obj$1 !== \"function\") {\n            var size = obj$1.length;\n            if (size !== undefined) {\n              var obj_tag = obj$1.tag | 0;\n              var tag = (size << 10) | obj_tag;\n              if (tag === 248) {\n                hash = mix(hash, obj$1[1]);\n              } else {\n                hash = mix(hash, tag);\n                var v = size - 1 | 0;\n                var block = v < num ? v : num;\n                for(var i = 0; i <= block; ++i){\n                  Caml_queue.push(obj$1[i], queue);\n                }\n              }\n            }\n            \n          }\n          \n        }\n        \n      }\n      \n    };\n    return final_mix(hash);\n  }\n}\n\nexports.caml_hash = caml_hash;\n/* No side effect */\n"},"lineCount":116}},"hash":"9a5e9cd6e06834134772c0c06da056f8","cacheData":{"env":{}}}